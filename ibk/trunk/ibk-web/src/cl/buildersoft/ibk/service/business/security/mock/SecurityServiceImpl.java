package cl.buildersoft.ibk.service.business.security.mock;

import cl.buildersoft.ibk.bean.business.Antiphishing;
import cl.buildersoft.ibk.bean.business.User;
import cl.buildersoft.ibk.enumeration.LoginStatusEnum;
import cl.buildersoft.ibk.service.business.AbstractMockService;
import cl.buildersoft.ibk.service.business.security.SecurityService;

public class SecurityServiceImpl extends AbstractMockService implements
		SecurityService {

	private final static String IMAGE = "";

	@Override
	public User validateUserId(String userId) {
		User user = null;

		if (userId.length() > 0) {
			user = new User();
			user.setKey(userId);
		}
		return user;
	}

	@Override
	public Antiphishing getAntiphishingInfo(User user) {
		waitService();
		Antiphishing antiphishing = new Antiphishing();
		antiphishing.setImage(IMAGE);
		antiphishing.setPhrase("Frase de prueba");
//		out.setSession(request.getSession(false).getId());

		return antiphishing;
	}

	@Override
	public LoginStatusEnum validatePassword(String userId, String password) {
		LoginStatusEnum out = null;
		if (userId.equals(password)) {
			out = LoginStatusEnum.CORRECT;
		} else {
			out = LoginStatusEnum.INCORRECT;
		}

		return out;
	}

	@Override
	public String[] askSecurityQuestions(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Boolean answerSecurityQuestions(String userId, String[] asnwers) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setAntiphishingInfo(String userId, Antiphishing antiphishing) {
		// TODO Auto-generated method stub

	}

}
